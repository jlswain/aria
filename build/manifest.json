{
    "common.javascript" : {
        "enviro" : "./support/pkman install -p npm phantomjs-prebuilt"
    },
    "common.python" : {
        "enviro" : "./support/pkman install python3"
    },
    "common.bash" : {
        "deps" : "./support/pkman install --try shellcheck"
    },
    "common.markdown" : {
        "all"       : "ignore",
        "enviro"    : [
            "./support/pkman install pandoc",
            "./support/pkman install -p cask wkhtmltopdf",
            "./support/pkman install -t -p apt-get wkhtmltopdf"
        ]
    },
    "build" : {
        "deps" : [
            "npm install"
        ],
        "test" : [
            "npm test",
            "./support/try -e shellcheck support/pkman support/try",
            "./support/try -e shellcheck markdown/mkpdf"
        ]
    },
    "hub.exchange" : {
        "deps"      : ["cd ../hub/exchange", "./setup.py develop"],
        "build"     : ["cd ../hub/exchange", "./setup.py bdist_egg"],
        "deploy"    : ["cd ../hub/exchange", "./bin/exchange -d start"],
        "test"      : ["cd ../hub/exchange", "./setup.py test", "../../build/support/try -e shellcheck ./bin/exchange"],
        "clean"     : ["cd ../hub/exchange", "./setup.py clean"]
    },
    "hub.gateway" : {
        "enviro"    : "./support/pkman install node",
        "deps"      : ["cd ../hub/gateway", "npm install"],
        "build"     : ["cd ../hub/gateway", "npm run build"],
        "deploy"    : ["cd ../hub/gateway", "npm start"],
        "test"      : ["cd ../hub/gateway", "npm test"],
        "clean"     : ["cd ../hub/gateway", "rm -rf bin"],
        "release"   : ["cd ../hub/gateway", "npm run release"]
    },
    "hub.remote" : {
        "enviro"    : "./support/pkman install node",
        "deps"      : ["cd ../hub/remote", "npm install"],
        "build"     : ["cd ../hub/remote", "npm run build"],
        "test"      : ["cd ../hub/remote", "npm test"],
        "clean"     : ["cd ../hub/remote", "rm -rf bin"],
        "release"   : ["cd ../hub/remote", "npm run release"]
    },
    "uml" : {
        "all" : "ignore",
        "enviro" : [
            "./support/pkman install --try -p brew pkg-config cairo libpng jpeg giflib",
            "./support/pkman install --try -p apt-get libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++",
            "./support/pkman install --try -p yum cairo cairo-devel cairomm-devel libjpeg-turbo-devel pango pango-devel pangomm pangomm-devel giflib-devel"
        ],
        "deps" : [
            "./support/pkman install --try -p npm mdgen"
        ],
        "build" : [
            "mkdir -p mdtmp__",
            "cd mdtmp__ && MDJ=$(find ../../ -name '*.mdj') && for file in $MDJ; do ../support/try mdgen image -m $file; mv *.png $(dirname $file); done && cd ..",
            "rm -rf mdtmp__"
        ],
        "release" : "self.build"
    },
   "reports.proposal" : {
        "all"       : "ignore",
        "build"     : "./support/try ./markdown/mkpdf -o Proposal.pdf ../reports/proposal",
        "clean"     : "rm -f ../reports/proposal/*.pdf",
        "release"   : "self.build" 
   },
    "reports.final" : {
        "all"   : "ignore",
        "build" : "./support/try ./markdown/mkpdf --auto-number --toc -o Report.pdf ../reports/final",
        "clean" : [
            "rm -f ../reports/final/*.pdf",
            "rm -f ../reports/final/uml/*.png"
        ],
        "release" : "self.build"
    }
}
