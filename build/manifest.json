{
    "common.javascript" : {
        "enviro" : "./support/pkman install -p npm phantomjs-prebuilt"
    },
    "common.python" : {
        "enviro" : "./support/pkman install python3"
    },
    "common.bash" : {
        "deps" : "./support/pkman install --try shellcheck"
    },
    "common.markdown" : {
        "enviro" : [
            "./support/pkman install pandoc",
            "./support/pkman install -p cask wkhtmltopdf",
            "./support/pkman install -t -p apt-get wkhtmltopdf"
        ]
    },
    "build" : {
        "deps" : [
            "npm install"
        ],
        "test" : [
            "npm test",
            "./support/try shellcheck run support/pkman support/try"
        ]
    },
    "ctrl-serve" : {
        "deps"      : ["cd ../ctrl-serve", "./setup.py develop"],
        "build"     : ["cd ../ctrl-serve", "./setup.py bdist_egg"],
        "test"      : ["cd ../ctrl-serve","./setup.py test"],
        "clean"     : ["cd ../ctrl-serve", "./setup.py clean"]
    },
    "remote" : {
        "enviro"    : "./support/pkman install node",
        "deps"      : ["cd ../remote", "npm install"],
        "build"     : ["cd ../remote", "npm run build"],
        "test"      : ["cd ../remote", "npm test"],
        "clean"     : ["cd ../remote", "rm -rf bin"]
    },
    "gateway" : {
        "enviro"    : "./support/pkman install node",
        "deps"      : ["cd ../gateway", "npm install"],
        "build"     : ["cd ../gateway", "npm run build"],
        "test"      : ["cd ../gateway", "npm test"],
        "clean"     : ["cd ../gateway", "rm -rf bin"]
    },
    "uml" : {
        "enviro" : [
            "./support/pkman install --try -p brew pkg-config cairo libpng jpeg giflib",
            "./support/pkman install --try -p apt-get libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++",
            "./support/pkman install --try -p yum cairo cairo-devel cairomm-devel libjpeg-turbo-devel pango pango-devel pangomm pangomm-devel giflib-devel"
        ],
        "deps" : [
            "./support/pkman install --try -p npm mdgen"
        ],
        "build" : [
            "mkdir -p mdtmp__",
            "cd mdtmp__ && MDJ=$(find ../../ -name '*.mdj') && for file in $MDJ; do ../support/try mdgen image -m $file; mv *.png $(dirname $file); done && cd ..",
            "rm -rf mdtmp__"
        ]
    },
   "reports.proposal" : {
        "build" : [
            "cd ../reports/proposal",
            "../../build/support/try pandoc -c ../../build/styles/style.css -t html -f markdown Proposal.md > Proposal.html",
            "../../build/support/try wkhtmltopdf -s Letter Proposal.html Proposal.pdf",
            "rm -f Proposal.html"
        ],
        "clean" : "rm -f ../reports/proposal/*.pdf"
    },
    "reports.research" : {
        "build" : [
            "cd ../reports/research",
            "for f in *.md; do (cat \"$f\"; echo) >> Research.markdown; done",
            "../../build/support/try pandoc --toc --toc-depth 2 -c ../../build/styles/style.css -t html -f markdown -B Cover.html Research.markdown > Research.html",
            "../../build/support/try wkhtmltopdf -s Letter Research.html Research.pdf",
            "rm -f Research.markdown Research.html"
        ],
        "clean" : "rm -f ../docs/research/*.pdf"
    },
     "reports.spec" : {
        "build" : [
            "cd ../reports/spec",
            "../../build/support/try pandoc --toc -c ../../build/styles/style.css -t html -f markdown -B Cover.html Specification.md > Specification.html",
            "../../build/support/try wkhtmltopdf -s Letter Specification.html Specification.pdf",
            "rm -f Specification.html"
        ],
        "clean" : "rm -f ../reports/spec/*.pdf"
    }
}
